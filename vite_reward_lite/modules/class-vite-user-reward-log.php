<?php
/**
 * Its User Reward Log Module
 *
 * @package Vite_Reward_Lite\Modules
 */

namespace Vite_Reward_Lite\Modules;

use Appsbd_Lite\V2\libs\Ajax_Confirm_Response;
use Appsbd_Lite\V2\libs\Ajax_Data_Response;
use Appsbd_Lite\V2\libs\AppInput;
use Vite_Reward_Lite\Core\Vite_Reward_Module_Lite;
use Vite_Reward_Lite\Models\Database\Mapbd_Reward_Log;


/**
 * Class User_Reward
 *
 * @package Vite_Reward_Lite\Modules
 */
class Vite_User_Reward_Log extends Vite_Reward_Module_Lite {

	/**
	 * The initialize is generated by appsbd
	 */
	public function initialize() {
	}

	/**
	 * The on init is generated by appsbd
	 */
	public function on_init() {
		parent::on_init();
		$this->add_ajax_action( 'log-details', array( $this, 'log_details' ) );
	}

	/**
	 * The data is generated by appsbd
	 */
	public function data() {
		$response = new Ajax_Data_Response();
		$user_id  = get_current_user_id();
		if ( empty( $user_id ) ) {
			$this->add_error( 'Invalid request' );
			return;
		}
		$logs = new Mapbd_Reward_Log();
		$logs->user_id( $user_id );
		$records = $logs->select_all_grid_data();
		if ( count( $records ) > 0 ) {
			foreach ( $records as $data ) {
				$data->entry_date = appsbd_get_wp_datetime_with_format( $data->entry_date );
			}
			$response->set_grid_data( $records );
		}
		$response->display_grid_response();
	}

	/**
	 * The log details is generated by appsbd
	 */
	public function log_details() {
		$response = new Ajax_Confirm_Response();
		$id       = AppInput::post_value( 'id' );
		if ( empty( $id ) ) {
			$this->add_error( 'Invalid Request' );
			$response->display_with_response( false );
			return;
		}
		$log_info = new Mapbd_Reward_Log();
		$log_info->id( $id );
		if ( $log_info->select() ) {
			$response->display_with_response( true, $log_info );
		} else {
			$this->add_error( 'No log found with this id' );
			$response->display_with_response( false, null );
		}
	}
}
